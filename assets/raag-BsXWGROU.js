var L=Object.defineProperty;var A=e=>{throw TypeError(e)};var $=(e,t,n)=>t in e?L(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var I=(e,t,n)=>$(e,typeof t!="symbol"?t+"":t,n),k=(e,t,n)=>t.has(e)||A("Cannot "+n);var u=(e,t,n)=>(k(e,t,"read from private field"),n?n.call(e):t.get(e)),b=(e,t,n)=>t.has(e)?A("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,n);const P={attack:.001,decay:.05,sustain:.6,release:.02},g={note:69,duration:.05,level:.7,waveform:"sine",env:P},M=e=>e?{...g,...e,env:{...g.env,...e.env}}:g,N=e=>{const{note:t,duration:n,level:o,env:c}=e;return D(t),f(n),x(o),S(c),e},D=e=>{if(e<21||e>108)throw new Error(`Invalid MIDI note ${e}. MIDI note values are expected to be in the range 21 and 108 (inclusive).`)},x=e=>{if(e<0||e>1)throw new Error(`Invalid level ${e}. Level values are expected to be in the range 0 and 1 (inclusive).`)},f=e=>{if(e<0)throw new Error(`Invalid time (in second) ${e}. Second values are expected to be positive.`)},S=e=>{f(e.attack),f(e.decay),x(e.sustain),f(e.release)},q=e=>440*(2**(1/12))**(e-69);var r;class C{constructor(){I(this,"ctx");b(this,r,!1)}init(){let t=this.ctx;return t===void 0&&(t=new AudioContext,this.ctx=t,u(this,r)&&t.addEventListener("statechange",()=>{this.log(`AudioContext state changed to ${t==null?void 0:t.state}`)})),t}log(t){var o;const n=(((o=this.ctx)==null?void 0:o.currentTime)??0).toFixed(6);console.info(`[yes] ${n} ${t}`)}get canAutoplay(){return this.ctx!==void 0}async play(t,n){const o=N(M(t)),{note:c,waveform:T,duration:p,level:m,env:a}=o,s=this.init();await s.resume();const l=s.currentTime,v=q(c),d=new OscillatorNode(s,{type:T,frequency:v}),i=new GainNode(s);d.connect(i),i.gain.setValueAtTime(0,0),i.gain.setValueCurveAtTime([0,m],l,a.attack),i.gain.setTargetAtTime(a.sustain*m,l+a.attack,a.decay/3),i.gain.setTargetAtTime(0,l+a.attack+a.decay+p,a.release/5);const w=new GainNode(s,{gain:.3});w.connect(s.destination),i.connect(w),d.start(),d.stop(l+a.attack+a.decay+p+a.release),u(this,r)&&this.log(`note ${Math.round(v)} hz: ${JSON.stringify(o)}`),d.onended=()=>{u(this,r)&&this.log(`note ${Math.round(v)} hz done`),n!==void 0&&n()}}}r=new WeakMap;const E=new C;let y=!1;window.addEventListener("click",()=>{E.init(),y=!0});const h=e=>{const t=parseInt(e.getAttribute("data-offset")),n=e.parentElement,o=parseInt(n.getAttribute("data-offset-base")||n.parentElement.getAttribute("data-offset-base"))||69,c=n!=null&&n.classList.contains("piano")?{release:3}:void 0;e.setAttribute("data-playing",!0),E.play({note:o+t,env:c},()=>{e.removeAttribute("data-playing")})},z=document.querySelectorAll("button[data-offset]");for(const e of z)e.ariaLabel=e.getAttribute("data-offset"),e.addEventListener("click",t=>h(t.target)),e.addEventListener("pointerenter",t=>{t.pointerType=="mouse"&&y&&h(t.target)}),e.addEventListener("focus",t=>{y&&h(t.target)});
